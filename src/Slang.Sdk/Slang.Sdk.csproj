<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFramework>net9.0</TargetFramework>
		<ImplicitUsings>enable</ImplicitUsings>
		<Nullable>enable</Nullable>
		<AllowUnsafeBlocks>true</AllowUnsafeBlocks>
		<PackageId>Slang.Sdk</PackageId>
		<PackageVersion>0.0.1</PackageVersion>
		<Title>Slang.Sdk - .NET Bindings for the Slang Shader Language</Title>
		<Description>A comprehensive .NET wrapper for the Slang Shader Language compiler, providing seamless integration of shader compilation and reflection capabilities into .NET applications.</Description>
		<Authors>Aqqorn</Authors>
		<Copyright>Copyright (c) 2025 Aqqorn</Copyright>
		<PackageLicenseExpression>Apache-2.0 WITH LLVM-exception</PackageLicenseExpression>
		<PackageReadmeFile>README.md</PackageReadmeFile>
		<RepositoryType>git</RepositoryType>
		<PackageTags>slang;slangc;slang.sdk;shader;shading;language;graphics;hlsl;glsl;vulkan;cross-platform</PackageTags>
		<PackageIcon>icon.png</PackageIcon>
		<RepositoryUrl>https://github.com/AlexanderSwain/Slang.Net.git</RepositoryUrl>
		<PackageOutputPath>$(ProjectDir)Builds\$(Configuration)\</PackageOutputPath>
		<OutputPath>$(ProjectDir)bin\$(Configuration)\</OutputPath>
		<OutputType>Exe</OutputType>
		<GeneratePackageOnBuild>True</GeneratePackageOnBuild>
	</PropertyGroup>

	<!-- Pre-build target to clear NuGet package cache for this specific package -->
	<Target Name="ClearNuGetPackageCache" BeforeTargets="Build">
		<Message Text="Clearing NuGet package cache for $(PackageId) v$(PackageVersion)..." Importance="high" />
		
		<!-- Get NuGet global packages folder path -->
		<PropertyGroup>
			<NuGetGlobalPackagesFolder>$([System.Environment]::GetFolderPath(SpecialFolder.UserProfile))\.nuget\packages</NuGetGlobalPackagesFolder>
			<PackageCacheFolder>$(NuGetGlobalPackagesFolder)\$(PackageId.ToLowerInvariant())</PackageCacheFolder>
		</PropertyGroup>
		
		<!-- Remove specific package folder if it exists -->
		<RemoveDir Directories="$(PackageCacheFolder)" Condition="Exists('$(PackageCacheFolder)')" />
		
		<!-- Also clear from temp/http-cache for this package -->
		<PropertyGroup>
			<NuGetTempFolder>$([System.Environment]::GetEnvironmentVariable('TEMP'))\NuGetScratch</NuGetTempFolder>
			<NuGetHttpCacheFolder>$([System.Environment]::GetFolderPath(SpecialFolder.LocalApplicationData))\NuGet\v3-cache</NuGetHttpCacheFolder>
		</PropertyGroup>
		
		<ItemGroup>
			<PackageTempFiles Include="$(NuGetTempFolder)\**\*$(PackageId)*" />
			<PackageHttpCacheFiles Include="$(NuGetHttpCacheFolder)\**\*$(PackageId)*" />
		</ItemGroup>
		
		<Delete Files="@(PackageTempFiles)" ContinueOnError="true" />
		<Delete Files="@(PackageHttpCacheFiles)" ContinueOnError="true" />
		
		<Message Text="Cleared NuGet cache for $(PackageId) package." Importance="high" />
	</Target>
	<ItemGroup>
	  <None Remove="Tests\Shaders\ComponentAddition.slang" />
	</ItemGroup>
	<ItemGroup>
	  <Content Include="Tests\Shaders\ComponentAddition.slang">
	    <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
	  </Content>
	</ItemGroup>

	<!-- Include README.md and icon.png in package -->
	<ItemGroup>
		<None Include="README.md" Pack="true" PackagePath="\" />
		<None Update="icon.png">
			<PackagePath>\</PackagePath>
			<Pack>True</Pack>
		</None>
		<Content Include="Tests\Shaders\AverageColor.slang">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</Content>
	</ItemGroup>

	<!-- Exclude test program from library builds -->
	<ItemGroup Condition="'$(OutputType)' == 'Library'">
		<Compile Remove="InteropTest.cs" />
		<Compile Remove="BindingTests.cs" />
		<Compile Remove="PrettyTests.cs" />
		<Compile Remove="Program.cs" />
	</ItemGroup>

	<!-- Platform-specific native dependencies for x64 -->
	<ItemGroup>
		<Content Include="..\Native\bin\$(Configuration)\x64\gfx.dll" Condition="Exists('..\Native\bin\$(Configuration)\x64\gfx.dll')">
			<Pack>true</Pack>
			<PackagePath>runtimes\win-x64\native\gfx.dll</PackagePath>
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
			<TargetPath>runtimes\win-x64\native\gfx.dll</TargetPath>
		</Content>
		<Content Include="..\Native\bin\$(Configuration)\x64\slang.dll" Condition="Exists('..\Native\bin\$(Configuration)\x64\slang.dll')">
			<Pack>true</Pack>
			<PackagePath>runtimes\win-x64\native\slang.dll</PackagePath>
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
			<TargetPath>runtimes\win-x64\native\slang.dll</TargetPath>
		</Content>
		<Content Include="..\Native\bin\$(Configuration)\x64\slang-glslang.dll" Condition="Exists('..\Native\bin\$(Configuration)\x64\slang-glslang.dll')">
			<Pack>true</Pack>
			<PackagePath>runtimes\win-x64\native\slang-glslang.dll</PackagePath>
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
			<TargetPath>runtimes\win-x64\native\slang-glslang.dll</TargetPath>
		</Content>
		<Content Include="..\Native\bin\$(Configuration)\x64\slang-glsl-module.dll" Condition="Exists('..\Native\bin\$(Configuration)\x64\slang-glsl-module.dll')">
			<Pack>true</Pack>
			<PackagePath>runtimes\win-x64\native\slang-glsl-module.dll</PackagePath>
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
			<TargetPath>runtimes\win-x64\native\slang-glsl-module.dll</TargetPath>
		</Content>
		<Content Include="..\Native\bin\$(Configuration)\x64\slang-llvm.dll" Condition="Exists('..\Native\bin\$(Configuration)\x64\slang-llvm.dll')">
			<Pack>true</Pack>
			<PackagePath>runtimes\win-x64\native\slang-llvm.dll</PackagePath>
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
			<TargetPath>runtimes\win-x64\native\slang-llvm.dll</TargetPath>
		</Content>
		<Content Include="..\Native\bin\$(Configuration)\x64\SlangNative.dll" Condition="Exists('..\Native\bin\$(Configuration)\x64\SlangNative.dll')">
			<Pack>true</Pack>
			<PackagePath>runtimes\win-x64\native\SlangNative.dll</PackagePath>
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
			<TargetPath>runtimes\win-x64\native\SlangNative.dll</TargetPath>
		</Content>
		<Content Include="..\Native\bin\$(Configuration)\x64\SlangNative.lib" Condition="Exists('..\Native\bin\$(Configuration)\x64\SlangNative.lib')">
			<Pack>true</Pack>
			<PackagePath>runtimes\win-x64\native\SlangNative.lib</PackagePath>
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
			<TargetPath>runtimes\win-x64\native\SlangNative.lib</TargetPath>
		</Content>
		<Content Include="..\Native\bin\$(Configuration)\x64\SlangNative.pdb" Condition="'$(Configuration)' == 'Debug' And Exists('..\Native\bin\$(Configuration)\x64\SlangNative.pdb')">
			<Pack>true</Pack>
			<PackagePath>runtimes\win-x64\native\SlangNative.pdb</PackagePath>
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
			<TargetPath>runtimes\win-x64\native\SlangNative.pdb</TargetPath>
		</Content>
		<Content Include="..\Native\bin\$(Configuration)\x64\slang-rt.dll" Condition="Exists('..\Native\bin\$(Configuration)\x64\slang-rt.dll')">
			<Pack>true</Pack>
			<PackagePath>runtimes\win-x64\native\slang-rt.dll</PackagePath>
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
			<TargetPath>runtimes\win-x64\native\slang-rt.dll</TargetPath>
		</Content>
		
		<!-- slangc dependencies -->
		<Content Include="..\Native\bin\$(Configuration)\x64\slangc.exe" Condition="Exists('..\Native\bin\$(Configuration)\x64\slangc.exe')">
			<Pack>true</Pack>
			<PackagePath>runtimes\win-x64\native\slangc.exe</PackagePath>
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
			<TargetPath>runtimes\win-x64\native\slangc.exe</TargetPath>
		</Content>
		<Content Include="..\Native\bin\$(Configuration)\x64\gfx.slang" Condition="Exists('..\Native\bin\$(Configuration)\x64\gfx.slang')">
			<Pack>true</Pack>
			<PackagePath>runtimes\win-x64\native\gfx.slang</PackagePath>
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
			<TargetPath>runtimes\win-x64\native\gfx.slang</TargetPath>
		</Content>
		<Content Include="..\Native\bin\$(Configuration)\x64\slang.slang" Condition="Exists('..\Native\bin\$(Configuration)\x64\slang.slang')">
			<Pack>true</Pack>
			<PackagePath>runtimes\win-x64\native\slang.slang</PackagePath>
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
			<TargetPath>runtimes\win-x64\native\slang.slang</TargetPath>
		</Content>
		<Content Include="..\Native\bin\$(Configuration)\x64\slangd.exe" Condition="Exists('..\Native\bin\$(Configuration)\x64\slangd.exe')">
			<Pack>true</Pack>
			<PackagePath>runtimes\win-x64\native\slangd.exe</PackagePath>
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
			<TargetPath>runtimes\win-x64\native\slangd.exe</TargetPath>
		</Content>
		<Content Include="..\Native\bin\$(Configuration)\x64\slangi.exe" Condition="Exists('..\Native\bin\$(Configuration)\x64\slangi.exe')">
			<Pack>true</Pack>
			<PackagePath>runtimes\win-x64\native\slangi.exe</PackagePath>
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
			<TargetPath>runtimes\win-x64\native\slangi.exe</TargetPath>
		</Content>
	</ItemGroup>

	<!-- Platform-specific native dependencies for ARM64 -->
	<ItemGroup>
		<Content Include="..\Native\bin\$(Configuration)\ARM64\gfx.dll" Condition="Exists('..\Native\bin\$(Configuration)\ARM64\gfx.dll')">
			<Pack>true</Pack>
			<PackagePath>runtimes\win-ARM64\native\gfx.dll</PackagePath>
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
			<TargetPath>runtimes\win-ARM64\native\gfx.dll</TargetPath>
		</Content>
		<Content Include="..\Native\bin\$(Configuration)\ARM64\slang.dll" Condition="Exists('..\Native\bin\$(Configuration)\ARM64\slang.dll')">
			<Pack>true</Pack>
			<PackagePath>runtimes\win-ARM64\native\slang.dll</PackagePath>
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
			<TargetPath>runtimes\win-ARM64\native\slang.dll</TargetPath>
		</Content>
		<Content Include="..\Native\bin\$(Configuration)\ARM64\slang-glslang.dll" Condition="Exists('..\Native\bin\$(Configuration)\ARM64\slang-glslang.dll')">
			<Pack>true</Pack>
			<PackagePath>runtimes\win-ARM64\native\slang-glslang.dll</PackagePath>
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
			<TargetPath>runtimes\win-ARM64\native\slang-glslang.dll</TargetPath>
		</Content>
		<Content Include="..\Native\bin\$(Configuration)\ARM64\slang-glsl-module.dll" Condition="Exists('..\Native\bin\$(Configuration)\ARM64\slang-glsl-module.dll')">
			<Pack>true</Pack>
			<PackagePath>runtimes\win-ARM64\native\slang-glsl-module.dll</PackagePath>
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
			<TargetPath>runtimes\win-ARM64\native\slang-glsl-module.dll</TargetPath>
		</Content>
		<Content Include="..\Native\bin\$(Configuration)\ARM64\slang-llvm.dll" Condition="Exists('..\Native\bin\$(Configuration)\ARM64\slang-llvm.dll')">
			<Pack>true</Pack>
			<PackagePath>runtimes\win-ARM64\native\slang-llvm.dll</PackagePath>
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
			<TargetPath>runtimes\win-ARM64\native\slang-llvm.dll</TargetPath>
		</Content>
		<Content Include="..\Native\bin\$(Configuration)\ARM64\SlangNative.dll" Condition="Exists('..\Native\bin\$(Configuration)\ARM64\SlangNative.dll')">
			<Pack>true</Pack>
			<PackagePath>runtimes\win-ARM64\native\SlangNative.dll</PackagePath>
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
			<TargetPath>runtimes\win-ARM64\native\SlangNative.dll</TargetPath>
		</Content>
		<Content Include="..\Native\bin\$(Configuration)\ARM64\SlangNative.lib" Condition="Exists('..\Native\bin\$(Configuration)\ARM64\SlangNative.lib')">
			<Pack>true</Pack>
			<PackagePath>runtimes\win-ARM64\native\SlangNative.lib</PackagePath>
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
			<TargetPath>runtimes\win-ARM64\native\SlangNative.lib</TargetPath>
		</Content>
		<Content Include="..\Native\bin\$(Configuration)\ARM64\SlangNative.pdb" Condition="'$(Configuration)' == 'Debug' And Exists('..\Native\bin\$(Configuration)\ARM64\SlangNative.pdb')">
			<Pack>true</Pack>
			<PackagePath>runtimes\win-ARM64\native\SlangNative.pdb</PackagePath>
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
			<TargetPath>runtimes\win-ARM64\native\SlangNative.pdb</TargetPath>
		</Content>
		<Content Include="..\Native\bin\$(Configuration)\ARM64\slang-rt.dll" Condition="Exists('..\Native\bin\$(Configuration)\ARM64\slang-rt.dll')">
			<Pack>true</Pack>
			<PackagePath>runtimes\win-ARM64\native\slang-rt.dll</PackagePath>
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
			<TargetPath>runtimes\win-ARM64\native\slang-rt.dll</TargetPath>
		</Content>
		
		<!-- slangc dependencies -->
		<Content Include="..\Native\bin\$(Configuration)\ARM64\slangc.exe" Condition="Exists('..\Native\bin\$(Configuration)\ARM64\slangc.exe')">
			<Pack>true</Pack>
			<PackagePath>runtimes\win-ARM64\native\slangc.exe</PackagePath>
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
			<TargetPath>runtimes\win-ARM64\native\slangc.exe</TargetPath>
		</Content>
		<Content Include="..\Native\bin\$(Configuration)\ARM64\gfx.slang" Condition="Exists('..\Native\bin\$(Configuration)\ARM64\gfx.slang')">
			<Pack>true</Pack>
			<PackagePath>runtimes\win-ARM64\native\gfx.slang</PackagePath>
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
			<TargetPath>runtimes\win-ARM64\native\gfx.slang</TargetPath>
		</Content>
		<Content Include="..\Native\bin\$(Configuration)\ARM64\slang.slang" Condition="Exists('..\Native\bin\$(Configuration)\ARM64\slang.slang')">
			<Pack>true</Pack>
			<PackagePath>runtimes\win-ARM64\native\slang.slang</PackagePath>
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
			<TargetPath>runtimes\win-ARM64\native\slang.slang</TargetPath>
		</Content>
		<Content Include="..\Native\bin\$(Configuration)\ARM64\slangd.exe" Condition="Exists('..\Native\bin\$(Configuration)\ARM64\slangd.exe')">
			<Pack>true</Pack>
			<PackagePath>runtimes\win-ARM64\native\slangd.exe</PackagePath>
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
			<TargetPath>runtimes\win-ARM64\native\slangd.exe</TargetPath>
		</Content>
		<Content Include="..\Native\bin\$(Configuration)\ARM64\slangi.exe" Condition="Exists('..\Native\bin\$(Configuration)\ARM64\slangi.exe')">
			<Pack>true</Pack>
			<PackagePath>runtimes\win-ARM64\native\slangi.exe</PackagePath>
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
			<TargetPath>runtimes\win-ARM64\native\slangi.exe</TargetPath>
		</Content>
	</ItemGroup>
</Project>
